(function(){var P$=Clazz.newPackage("org.openscience.cdk.renderer.generators"),p$1={},I$=[[0,'java.util.Arrays','java.awt.Color','org.openscience.cdk.renderer.generators.HighlightGenerator',['org.openscience.cdk.renderer.generators.HighlightGenerator','.HighlightRadius'],['org.openscience.cdk.renderer.generators.HighlightGenerator','.HighlightPalette'],['org.openscience.cdk.renderer.generators.BasicSceneGenerator','.Scale'],'java.util.HashMap','java.awt.geom.Area','org.openscience.cdk.renderer.elements.ElementGroup','org.openscience.cdk.renderer.elements.GeneralPath',['java.awt.geom.RoundRectangle2D','.Double'],'java.awt.geom.AffineTransform','org.openscience.cdk.renderer.generators.IGeneratorParameter',['org.openscience.cdk.renderer.generators.HighlightGenerator','.FixedPalette'],['org.openscience.cdk.renderer.generators.HighlightGenerator','.AutoGenerated']]],I$0=I$[0],$I$=function(i,n,m){return m?$I$(i)[n].apply(null,m):((i=(I$[i]||(I$[i]=Clazz.load(I$0[i])))),!n&&i.$load$&&Clazz.load(i,2),i)};
/*c*/var C$=Clazz.newClass(P$, "HighlightGenerator", function(){
Clazz.newInstance(this, arguments,0,C$);
}, null, 'org.openscience.cdk.renderer.generators.IGenerator');
C$.$classes$=[['Palette',9],['FixedPalette',26],['AutoGenerated',26],['HighlightRadius',9],['HighlightPalette',9]];

C$.$clinit$=2;

Clazz.newMeth(C$, '$init$', function () {
this.highlightRadius=Clazz.new_($I$(4,1));
this.highlightPalette=Clazz.new_($I$(5,1));
},1);

C$.$fields$=[['O',['highlightRadius','org.openscience.cdk.renderer.generators.HighlightGenerator.HighlightRadius','highlightPalette','org.openscience.cdk.renderer.generators.HighlightGenerator.HighlightPalette']]
,['O',['DEFAULT_PALETTE','org.openscience.cdk.renderer.generators.HighlightGenerator.Palette']]]

Clazz.newMeth(C$, ['generate$org_openscience_cdk_interfaces_IAtomContainer$org_openscience_cdk_renderer_RendererModel','generate$org_openscience_cdk_interfaces_IChemObject$org_openscience_cdk_renderer_RendererModel'],  function (container, model) {
var highlight=container.getProperty$O("cdk.highlight.id");
if (highlight == null ) return null;
var palette=model.getParameter$Class(Clazz.getClass($I$(5))).getValue$();
var radius=(model.getParameter$Class(Clazz.getClass($I$(4))).getValue$()).$c() / (model.getParameter$Class(Clazz.getClass($I$(6))).getValue$()).$c();
var shapes=Clazz.new_($I$(7,1));
for (var atom, $atom = container.atoms$().iterator$(); $atom.hasNext$()&&((atom=($atom.next$())),1);) {
var id=highlight.get$O(atom);
if (id == null ) continue;
var area=shapes.get$O(id);
var shape=C$.createAtomHighlight$org_openscience_cdk_interfaces_IAtom$D(atom, radius);
if (area == null ) shapes.put$O$O(id, Clazz.new_($I$(8,1).c$$java_awt_Shape,[shape]));
 else area.add$java_awt_geom_Area(Clazz.new_($I$(8,1).c$$java_awt_Shape,[shape]));
}
for (var bond, $bond = container.bonds$().iterator$(); $bond.hasNext$()&&((bond=($bond.next$())),1);) {
var id=highlight.get$O(bond);
if (id == null ) continue;
var area=shapes.get$O(id);
var shape=C$.createBondHighlight$org_openscience_cdk_interfaces_IBond$D(bond, radius);
if (area == null ) shapes.put$O$O(id, (area=Clazz.new_($I$(8,1).c$$java_awt_Shape,[shape])));
 else area.add$java_awt_geom_Area(Clazz.new_($I$(8,1).c$$java_awt_Shape,[shape]));
var a1=bond.getBegin$();
var a2=bond.getEnd$();
var a1Id=highlight.get$O(a1);
var a2Id=highlight.get$O(a2);
if (a1Id != null  && !a1Id.equals$O(id) ) area.subtract$java_awt_geom_Area(shapes.get$O(a1Id));
if (a2Id != null  && !a2Id.equals$O(id) ) area.subtract$java_awt_geom_Area(shapes.get$O(a2Id));
}
var group=Clazz.new_($I$(9,1));
for (var e, $e = shapes.entrySet$().iterator$(); $e.hasNext$()&&((e=($e.next$())),1);) {
group.add$org_openscience_cdk_renderer_elements_IRenderingElement($I$(10,"shapeOf$java_awt_Shape$java_awt_Color",[e.getValue$(), palette.color$I((e.getKey$()).$c())]));
}
return group;
});

Clazz.newMeth(C$, 'createAtomHighlight$org_openscience_cdk_interfaces_IAtom$D',  function (atom, radius) {
var x=atom.getPoint2d$().x;
var y=atom.getPoint2d$().y;
return Clazz.new_($I$(11,1).c$$D$D$D$D$D$D,[x - radius, y - radius, 2 * radius, 2 * radius, 2 * radius, 2 * radius]);
}, 1);

Clazz.newMeth(C$, 'createBondHighlight$org_openscience_cdk_interfaces_IBond$D',  function (bond, radius) {
var x1=bond.getBegin$().getPoint2d$().x;
var x2=bond.getEnd$().getPoint2d$().x;
var y1=bond.getBegin$().getPoint2d$().y;
var y2=bond.getEnd$().getPoint2d$().y;
var dx=x2 - x1;
var dy=y2 - y1;
var mag=Math.sqrt((dx * dx) + (dy * dy));
dx/=mag;
dy/=mag;
var r2=radius / 2;
var s=Clazz.new_($I$(11,1).c$$D$D$D$D$D$D,[x1 - r2, y1 - r2, mag + radius, radius, radius, radius]);
var theta=Math.atan2(dy, dx);
return $I$(12).getRotateInstance$D$D$D(theta, x1, y1).createTransformedShape$java_awt_Shape(s);
}, 1);

Clazz.newMeth(C$, 'getParameters$',  function () {
return $I$(1,"asList$OA",[Clazz.array($I$(13), -1, [this.highlightRadius, this.highlightPalette])]);
});

Clazz.newMeth(C$, 'createPalette$java_awt_ColorA',  function (colors) {
return Clazz.new_($I$(14,1).c$$java_awt_ColorA,[colors]);
}, 1);

Clazz.newMeth(C$, 'createPalette$java_awt_Color$java_awt_ColorA',  function (color, colors) {
var cs=Clazz.array($I$(2), [colors.length + 1]);
cs[0]=color;
System.arraycopy$O$I$O$I$I(colors, 0, cs, 1, colors.length);
return Clazz.new_($I$(14,1).c$$java_awt_ColorA,[cs]);
}, 1);

Clazz.newMeth(C$, 'createAutoPalette$F$F$I',  function (saturation, brightness, alpha) {
return Clazz.new_($I$(15,1).c$$I$F$F$I,[5, saturation, brightness, alpha]);
}, 1);

Clazz.newMeth(C$, 'createAutoGenPalette$F$F$Z',  function (saturation, brightness, transparent) {
return Clazz.new_($I$(15,1).c$$I$F$F$I,[5, saturation, brightness, transparent ? 200 : 255]);
}, 1);

Clazz.newMeth(C$, 'createAutoGenPalette$Z',  function (transparent) {
return Clazz.new_($I$(15,1).c$$I$I,[5, transparent ? 200 : 255]);
}, 1);

C$.$static$=function(){C$.$static$=0;
C$.DEFAULT_PALETTE=C$.createAutoGenPalette$Z(true);
};
;
(function(){/*i*/var C$=Clazz.newInterface(P$.HighlightGenerator, "Palette", function(){
});
})()
;
(function(){/*c*/var C$=Clazz.newClass(P$.HighlightGenerator, "FixedPalette", function(){
Clazz.newInstance(this, arguments[0],false,C$);
}, null, [['org.openscience.cdk.renderer.generators.HighlightGenerator','org.openscience.cdk.renderer.generators.HighlightGenerator.Palette']]);

C$.$clinit$=2;

Clazz.newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['O',['colors','java.awt.Color[]']]]

Clazz.newMeth(C$, 'c$$java_awt_ColorA',  function (colors) {
;C$.$init$.apply(this);
this.colors=$I$(1).copyOf$OA$I(colors, colors.length);
}, 1);

Clazz.newMeth(C$, 'color$I',  function (id) {
if (id < 0) throw Clazz.new_(Clazz.load('IllegalArgumentException').c$$S,["id should be positive"]);
if (id >= this.colors.length) throw Clazz.new_(Clazz.load('IllegalArgumentException').c$$S,["no color has been provided for id=" + id]);
return this.colors[id];
});

Clazz.newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz.newClass(P$.HighlightGenerator, "AutoGenerated", function(){
Clazz.newInstance(this, arguments[0],false,C$);
}, null, [['org.openscience.cdk.renderer.generators.HighlightGenerator','org.openscience.cdk.renderer.generators.HighlightGenerator.Palette']]);

C$.$clinit$=2;

Clazz.newMeth(C$, '$init$', function () {
},1);

C$.$fields$=[['F',['saturation','brightness'],'I',['alpha'],'O',['colors','java.awt.Color[]']]]

Clazz.newMeth(C$, 'c$$I$I',  function (n, alpha) {
C$.c$$I$F$F$I.apply(this, [n, 0.45, 0.95, alpha]);
}, 1);

Clazz.newMeth(C$, 'c$$I$F$F$I',  function (n, saturation, brightness, alpha) {
;C$.$init$.apply(this);
this.colors=Clazz.array($I$(2), [n]);
this.alpha=alpha;
this.saturation=saturation;
this.brightness=brightness;
p$1.fill$java_awt_ColorA$I$I.apply(this, [this.colors, 0, n - 1]);
}, 1);

Clazz.newMeth(C$, 'fill$java_awt_ColorA$I$I',  function (colors, from, to) {
if (this.alpha < 255) {
for (var i=from; i <= to; i++) {
var c=$I$(2,"getHSBColor$F$F$F",[(14 + i) * 0.618034, this.saturation, this.brightness]);
colors[i]=Clazz.new_([c.getRed$(), c.getGreen$(), c.getBlue$(), this.alpha],$I$(2,1).c$$I$I$I$I);
}
} else {
for (var i=from; i <= to; i++) colors[i]=$I$(2,"getHSBColor$F$F$F",[(14 + i) * 0.618034, this.saturation, this.brightness]);

}}, p$1);

Clazz.newMeth(C$, 'color$I',  function (id) {
if (id < 0) throw Clazz.new_(Clazz.load('IllegalArgumentException').c$$S,["id should be positive"]);
if (id >= this.colors.length) {
var org=this.colors.length;
this.colors=$I$(1).copyOf$OA$I(this.colors, id * 2);
p$1.fill$java_awt_ColorA$I$I.apply(this, [this.colors, org, this.colors.length - 1]);
}return this.colors[id];
});

Clazz.newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz.newClass(P$.HighlightGenerator, "HighlightRadius", function(){
Clazz.newInstance(this, arguments[0],false,C$);
}, 'org.openscience.cdk.renderer.generators.parameter.AbstractGeneratorParameter');

C$.$clinit$=2;

Clazz.newMeth(C$, '$init$', function () {
},1);

Clazz.newMeth(C$, 'getDefault$',  function () {
return Double.valueOf$D(10.0);
});

Clazz.newMeth(C$);
})()
;
(function(){/*c*/var C$=Clazz.newClass(P$.HighlightGenerator, "HighlightPalette", function(){
Clazz.newInstance(this, arguments[0],false,C$);
}, 'org.openscience.cdk.renderer.generators.parameter.AbstractGeneratorParameter');

C$.$clinit$=2;

Clazz.newMeth(C$, '$init$', function () {
},1);

Clazz.newMeth(C$, 'getDefault$',  function () {
return $I$(3).DEFAULT_PALETTE;
});

Clazz.newMeth(C$);
})()

Clazz.newMeth(C$);
})();
;Clazz.setTVer('5.0.1-v6');//Created 2025-03-10 15:41:31 Java2ScriptVisitor version 5.0.1-v6 net.sf.j2s.core.jar version 5.0.1-v6
